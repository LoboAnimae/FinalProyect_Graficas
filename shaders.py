VERSION_NUMBER = 450

GL_PY_VERTEX_SHADER = """
#version %s

layout (location = 0) in vec3 GL_INPUT_POSITION;
layout (location = 1) in vec3 GL_INPUT_NORMAL;
layout (location = 2) in vec2 GL_INPUT_TEXTURE_COORDS;

uniform mat4 GL_INPUT_UNIFORM_MATRIX;
uniform vec3 GL_INPUT_UNIFORM_LIGHT;
uniform float GL_INPUT_UNIFORM_TIME;

out float GL_INTENSITY_FLOAT;
out vec2 GL_VERTEX_TEXTURE_COORDS;
out vec3 GL_POSITION_VECTOR;
out vec3 GL_NORMAL_VECTOR;
out float GL_TIMER_FLOAT;

void main()
{
	GL_NORMAL_VECTOR = GL_INPUT_NORMAL;
	GL_VERTEX_TEXTURE_COORDS = GL_INPUT_TEXTURE_COORDS;
	GL_POSITION_VECTOR = GL_INPUT_POSITION;
	GL_TIMER_FLOAT = GL_INPUT_UNIFORM_TIME;
	GL_INTENSITY_FLOAT = dot(GL_INPUT_NORMAL, normalize(GL_INPUT_UNIFORM_LIGHT));
	GL_POSITION_VECTOR = GL_INPUT_UNIFORM_MATRIX * vec4(GL_INPUT_POSITION.x, GL_INPUT_POSITION.y, GL_INPUT_POSITION.z, 1.0);
}
""" % VERSION_NUMBER

GL_PY_FRAGMENT_SHADER = """
#version %s

layout(location = 0) out vec4 GL_COLOR_FRAGGING_COLOR;

in float GL_INTENSITY_FLOAT;
in vec2 GL_VERTEX_TEXTURE_COORDS;

uniform sampler2D GL_SAMPLER_2_D_TEXTURE;
uniform vec4 GL_DIFFUSE;
uniform vec4 GL_AMBIENT;

void main()
{
	GL_COLOR_FRAGGING_COLOR = texture(GL_SAMPLER_2_D_TEXTURE, GL_VERTEX_TEXTURE_COORDS);
}
""" % VERSION_NUMBER

GL_DEFAULT_SHADER = """
#version %s
layout(location = 0) out vec4 GL_COLOR_FRAGGING_COLOR;

in float GL_INTENSITY_FLOAT;
in vec2 GL_VERTEX_TEXTURE_COORDS;
in vec3 GL_NORMAL_VECTOR;

uniform sampler2D GL_SAMPLER_2_D_TEXTURE;
uniform vec4 GL_DIFFUSE;
uniform vec4 GL_AMBIENT;

void main()
{
	GL_COLOR_FRAGGING_COLOR = vec4(GL_NORMAL_VECTOR, 1.1);
}
""" % VERSION_NUMBER